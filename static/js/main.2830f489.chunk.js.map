{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"2PAIA,SAASA,EAAOC,GAGZ,OACE,4BACIC,UAAU,SACVC,QAASF,EAAME,SAGhBF,EAAMG,O,IAMTC,E,kDAEJ,WAAYJ,GAAO,IAAD,8BAChB,cAAMA,IACDK,MAAM,CACTC,QAAQC,MAAM,GAAGC,KAAK,MACtBC,SAAQ,GAJM,E,wDAQNC,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAChCC,EAAgBP,IAAYA,EAAQI,KAGvCJ,EAAQI,GAAIC,KAAKN,MAAMI,QAAU,IAAI,IACrCE,KAAKG,SAAS,CACZR,QAAQA,EACRG,SAASE,KAAKN,MAAMI,a,mCAIXC,GAAI,IAAD,OACd,OACE,kBAACX,EAAD,CACEI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAI,EAAKa,YAAYL,Q,+BAMlC,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAU1C,OAPEU,EADCC,EACM,WAAWA,EAEX,iBAAiBN,KAAKN,MAAMI,QAAQ,IAAI,KAM/C,yBAAKR,UAAU,aACb,yBAAKA,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GA1DTC,IAAMC,WAiEpBC,E,uKAEF,OACE,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GATSkB,IAAMC,WAwBzB,SAASP,EAAgBP,GAYvB,IAXA,IAAMgB,EAAQ,CACZ,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGCZ,EAAE,EAAEA,EAAEY,EAAMC,OAAOb,IAAI,CAAC,IAAD,cACfY,EAAMZ,GADS,GACtBc,EADsB,KACpBC,EADoB,KAClBC,EADkB,KAE7B,GAAGpB,EAAQkB,IAAMlB,EAAQkB,KAAKlB,EAAQmB,IAAMnB,EAAQkB,KAAKlB,EAAQoB,GAC/D,OAAOpB,EAAQkB,GAGnB,OAAO,KAzBTG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.2830f489.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n\n    \n    return (\n      <button \n          className=\"square\" \n          onClick={props.onClick}\n      >\n        {/* TODO */}\n        {props.value}\n      </button>\n    );\n  \n}\n\nclass Board extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      squares:Array(9).fill(null),\n      xIsNext:true,\n    };\n  }\n\n  handleClick(i){\n    const squares = this.state.squares.slice();\n    if(calculateWinner(squares) || squares[i]){\n      return;\n    }\n    squares[i]= this.state.xIsNext ? 'X':'O';\n    this.setState({\n      squares:squares,\n      xIsNext:!this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return(\n      <Square \n        value={this.state.squares[i]}\n        onClick={()=>this.handleClick(i)}  \n      />\n    ); \n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if(winner){\n      status='Winner: '+winner;\n    }else{\n      status='Next player: '+(this.state.xIsNext?'X':'O');\n\n    }\n    // const status = 'Next player: '+(this.state.xIsNext?'X':'O');\n\n    return (\n      <div className=\"container\">\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n\n\nfunction calculateWinner(squares){\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6],\n  ];\n\n  for(let i=0;i<lines.length;i++){\n    const [a,b,c]=lines[i];\n    if(squares[a] && squares[a]===squares[b] && squares[a]===squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\n"],"sourceRoot":""}